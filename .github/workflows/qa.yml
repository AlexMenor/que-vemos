name: que-vemos QA
on:
  push:
    branches: [master]
env:
  TEST_IMAGE_PATH: ghcr.io/alexmenor/que-vemos-test-env:latest

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v4
      - run: poetry install
      - run: poetry run task lint

  check-if-container-needs-rebuild:
    outputs:
      run_docker_build: ${{ steps.check_files.outputs.run_docker_build }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - id: check_files
        run: git diff --name-only HEAD^ HEAD | grep -E "(Dockerfile|pyproject.toml|qa.yml)" && echo "::set-output name=run_docker_build::true" || echo "::set-output name=run_docker_build::false"

  push-test-container-to-GPR:
    runs-on: ubuntu-latest
    needs: check-if-container-needs-rebuild
    if: needs.check-if-container-needs-rebuild.outputs.run_docker_build == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Push
        run: docker build -t $TEST_IMAGE_PATH . && docker push $TEST_IMAGE_PATH

  test:
    runs-on: ubuntu-latest
    needs: push-test-container-to-GPR
    if: always()
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - uses: actions/checkout@v2
      - run: docker run -t -v `pwd`:/test $TEST_IMAGE_PATH

  test_serverless:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          - run: npm i -g jest
          - run: cd app/serverless/test && jest --config=jest-config.json
